{"version":3,"sources":["components/img/Blog-logo.png","components/pages/HomePage.js","components/nevigation/TopNavigation.js","components/pages/DashboardPage.js","App.js","serviceWorker.js","index.js","components/img/logo.png"],"names":["module","exports","__webpack_require__","p","HomePage","react_default","a","createElement","Container","fluid","style","height","color","background","Row","className","Col","xs","sm","alt","src","logo","fontFamily","boxShadow","lineHeight","Link","to","backgroundColor","border","MenuExampleStackable","state","handleItemClick","e","_ref","name","_this","setState","activeItem","this","Menu","stackable","Item","active","onClick","position","Component","DashboardPage","TopNavigation_MenuExampleStackable","App","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oSCwDzBC,EAnDE,kBACfC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,WAAY,gDAGdR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,UAAU,wDACVL,MAAO,CAAEC,OAAQ,SAEjBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACfb,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,YAAYI,IAAI,0BAA0BC,IAAKC,OAEhEhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,EACJR,MAAO,CACLY,WAAY,4BAGdjB,EAAAC,EAAAC,cAAA,MACEG,MAAO,CACLa,UACE,0DACFV,WAAY,qBACZW,WAAY,SALhB,yBAUAnB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACbV,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,GAAG,aACHX,UAAU,yBACVL,MAAO,CACLiB,gBAAiB,UACjBC,OAAQ,SALZ,6FCpCWC,6MACnBC,MAAQ,KAERC,gBAAkB,SAACC,EAADC,GAAA,IAAMC,EAAND,EAAMC,KAAN,OAAiBC,EAAKC,SAAS,CAAEC,WAAYH,6EAEtD,IACCG,EAAeC,KAAKR,MAApBO,WAER,OACEhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,WAAS,GACbnC,EAAAC,EAAAC,cAACgC,EAAA,EAAKE,KAAN,KACEpC,EAAAC,EAAAC,cAAA,OAAKa,IAAKC,OAGZhB,EAAAC,EAAAC,cAACgC,EAAA,EAAKE,KAAN,CACEP,KAAK,OACLQ,OAAuB,SAAfL,EACRM,QAASL,KAAKP,iBAHhB,YAQA1B,EAAAC,EAAAC,cAACgC,EAAA,EAAKE,KAAN,CACEP,KAAK,WACLQ,OAAuB,aAAfL,EACRM,QAASL,KAAKP,iBAHhB,gBAQA1B,EAAAC,EAAAC,cAACgC,EAAA,EAAKE,KAAN,CACEP,KAAK,WACLQ,OAAuB,aAAfL,EACRM,QAASL,KAAKP,iBAHhB,WAOA1B,EAAAC,EAAAC,cAACgC,EAAA,EAAKA,KAAN,CAAWK,SAAS,SAClBvC,EAAAC,EAAAC,cAACgC,EAAA,EAAKE,KAAN,CACEP,KAAK,UACLQ,OAAuB,YAAfL,EACRM,QAASL,KAAKP,iBAHhB,oBAtCwCc,aCqDnCC,EAnDO,kBACpBzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAO,CACLC,OAAQ,QACRC,MAAO,UAGTP,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,UAAU,wDACVL,MAAO,CAAEC,OAAQ,SAEjBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACfb,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,YAAYI,IAAI,0BAA0BC,IAAKC,OAEhEhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,EACJR,MAAO,CACLY,WAAY,4BAGdjB,EAAAC,EAAAC,cAAA,MACEG,MAAO,CACLa,UACE,0DACFV,WAAY,qBACZW,WAAY,SALhB,YAUAnB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACbV,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,GAAG,aACHX,UAAU,yBACVL,MAAO,CACLiB,gBAAiB,UACjBC,OAAQ,SALZ,wBC3BKoB,UAPH,kBACV3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhD,IACjCC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWN,OCE1BO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACPtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBrE,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.8241e1d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Blog-logo.549e2e6e.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport logo from \"../img/logo.png\";\n\nconst HomePage = () => (\n  <Container\n    fluid\n    style={{\n      height: \"100vh\",\n      color: \"white\",\n      background: \"linear-gradient(to right, #692022, #1b1819)\"\n    }}\n  >\n    <Row\n      className=\"align-items-center justify-content-center text-center\"\n      style={{ height: \"100%\" }}\n    >\n      <Col xs={12} sm={6}>\n        <img className=\"img-fluid\" alt=\"Adventurers League Logo\" src={logo} />\n      </Col>\n      <Col\n        xs={12}\n        sm={6}\n        style={{\n          fontFamily: \"'Open Sans', sans-serif\"\n        }}\n      >\n        <h1\n          style={{\n            boxShadow:\n              \"6px 0 0 rgba(20,12,10, .7), -6px 0 0 rgba(20,12,10, .7)\",\n            background: \"rgba(20,12,10, .7)\",\n            lineHeight: \"3rem\"\n          }}\n        >\n          BECOME AN ADVENTURER!\n        </h1>\n        <br />\n        <div className=\"text-center\">\n          <Link\n            to=\"/dashboard\"\n            className=\"btn btn-primary btn-lg\"\n            style={{\n              backgroundColor: \"#9c0b0e\",\n              border: \"none\"\n            }}\n          >\n            JOIN THE PARTY!\n          </Link>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport logo from \"../img/Blog-logo.png\";\n\nexport default class MenuExampleStackable extends Component {\n  state = {};\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Menu stackable>\n        <Menu.Item>\n          <img src={logo} />\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"Home\"\n          active={activeItem === \"Home\"}\n          onClick={this.handleItemClick}\n        >\n          Features\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"Projects\"\n          active={activeItem === \"Projects\"}\n          onClick={this.handleItemClick}\n        >\n          Testimonials\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"Timeline\"\n          active={activeItem === \"Timeline\"}\n          onClick={this.handleItemClick}\n        >\n          Sign-in\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          <Menu.Item\n            name=\"Profile\"\n            active={activeItem === \"Profile\"}\n            onClick={this.handleItemClick}\n          >\n            Sign-in\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport logo from \"../img/logo.png\";\nimport TopNavigation from \"../nevigation/TopNavigation\";\n\nconst DashboardPage = () => (\n  <Container\n    fluid\n    style={{\n      height: \"100vh\",\n      color: \"white\"\n    }}\n  >\n    <TopNavigation />\n    <Row\n      className=\"align-items-center justify-content-center text-center\"\n      style={{ height: \"100%\" }}\n    >\n      <Col xs={12} sm={6}>\n        <img className=\"img-fluid\" alt=\"Adventurers League Logo\" src={logo} />\n      </Col>\n      <Col\n        xs={12}\n        sm={6}\n        style={{\n          fontFamily: \"'Open Sans', sans-serif\"\n        }}\n      >\n        <h1\n          style={{\n            boxShadow:\n              \"6px 0 0 rgba(20,12,10, .7), -6px 0 0 rgba(20,12,10, .7)\",\n            background: \"rgba(20,12,10, .7)\",\n            lineHeight: \"3rem\"\n          }}\n        >\n          WELCOME!\n        </h1>\n        <br />\n        <div className=\"text-center\">\n          <Link\n            to=\"/dashboard\"\n            className=\"btn btn-primary btn-lg\"\n            style={{\n              backgroundColor: \"#9c0b0e\",\n              border: \"none\"\n            }}\n          >\n            JOIN THE PARTY!\n          </Link>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardPage;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport HomePage from \"./components/pages/HomePage\";\nimport DashboardPage from \"./components/pages/DashboardPage\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <div>\n    <Route path=\"/\" exact component={HomePage} />\n    <Route path=\"/dashboard\" exact component={DashboardPage} />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a4afa69b.png\";"],"sourceRoot":""}