{"version":3,"sources":["../node_modules/pro-gallery/dist/esm/components/helpers/videoScrollHelper.js"],"names":["__webpack_require__","r","__webpack_exports__","tslib__WEBPACK_IMPORTED_MODULE_0__","pro_gallery_lib__WEBPACK_IMPORTED_MODULE_1__","pro_gallery_lib__WEBPACK_IMPORTED_MODULE_2__","pro_gallery_lib__WEBPACK_IMPORTED_MODULE_3__","_scrollHelper__WEBPACK_IMPORTED_MODULE_4__","VIDEO_EVENTS","SCROLL","CLICKED","HOVERED","ENDED","INIT_SCROLL","VideoScrollHelper","config","_this","this","scrollBase","videoItems","currentPlayingIdx","currentItemCount","playing","updateGalleryStructure","bind","initializePlayState","onScroll","handleEvent","play","stop","isVisible","videoPlay","undefined","itemClick","setPlayingVideos","lastVideoPlayed","videoRatingMap","Map","trigger","Object","assign","apply","keys","map","key","_a","args","eventName","eventData","prototype","galleryStructure","videoLoop","oneRow","galleryWidth","getGalleryDimensions","galleryItems","length","forEach","item","type","id","includes","isVideoPlaceholder","has","set","idx","push","events","ITEM_ACTION_TRIGGERED","itemClicked","HOVER_SET","itemHovered","VIDEO_ENDED","videoEnded","VIDEO_PLAYED","videoPlayed","VIDEO_ERROR","videoErrorReported","IdxExistsInVideoItems","top","left","autoPlayNextVideoByRating","isCurrentVideoStillVisible","findIndex","indexInVideoItems","scroll","shouldAutoPlay","secondBestRating","rating","Infinity","bestRating","some","itemRating","get","allowedLoop","calculateCurrentItemPlacement","setPlayingIdx","newRating","onPlayingIdxChange","currentItemPlacement","visibleHorizontally","target","offsetTop","scrollY","scrollLeft","videoPlayVerticalTolerance","offset","bottom","videoPlayHorizontalTolerance","right","visibleVertically","style","height","screenHeight","innerHeight","padding","width","screenWidth","innerWidth"],"mappings":"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","file":"static/js/proGallery_videoScrollHelper.23756254.chunk.js","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { GALLERY_CONSTS, dimensionsHelper, window } from 'pro-gallery-lib';\nimport { isWithinPaddingVertically, isWithinPaddingHorizontally } from './scrollHelper';\nvar VIDEO_EVENTS = {\n  SCROLL: 'SCROLL',\n  CLICKED: 'CLICKED',\n  HOVERED: 'HOVERED',\n  ENDED: 'ENDED',\n  INIT_SCROLL: 'INIT_SCROLL'\n};\nvar VideoScrollHelper = /** @class */function () {\n  function VideoScrollHelper(config) {\n    var _this = this;\n    this.scrollBase = 0;\n    this.videoItems = [];\n    this.currentPlayingIdx = -1;\n    this.currentItemCount = 0;\n    this.playing = false;\n    this.updateGalleryStructure = this.updateGalleryStructure.bind(this);\n    this.initializePlayState = this.initializePlayState.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this.handleEvent = this.handleEvent.bind(this);\n    this.play = this.play.bind(this);\n    this.stop = this.stop.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n    this.videoPlay = undefined;\n    this.itemClick = undefined;\n    this.setPlayingVideos = config.setPlayingVideos;\n    this.lastVideoPlayed = -1;\n    this.videoRatingMap = new Map();\n    this.trigger = Object.assign.apply(Object, __spreadArrays([{}], Object.keys(VIDEO_EVENTS).map(function (key) {\n      var _a;\n      return _a = {}, _a[key] = function (args) {\n        return _this.handleEvent({\n          eventName: key,\n          eventData: args\n        });\n      }, _a;\n    })));\n  }\n  //--------------------------updates----------------------------------//\n  VideoScrollHelper.prototype.updateGalleryStructure = function (_a) {\n    var _this = this;\n    var galleryStructure = _a.galleryStructure,\n      scrollBase = _a.scrollBase,\n      videoPlay = _a.videoPlay,\n      videoLoop = _a.videoLoop,\n      itemClick = _a.itemClick,\n      oneRow = _a.oneRow;\n    this.galleryWidth = dimensionsHelper.getGalleryDimensions().galleryWidth;\n    this.scrollBase = scrollBase;\n    this.videoPlay = videoPlay;\n    this.videoLoop = videoLoop;\n    this.itemClick = itemClick;\n    this.oneRow = oneRow;\n    this.currentItemCount = galleryStructure.galleryItems.length;\n    this.videoItems = [];\n    galleryStructure.galleryItems.forEach(function (item) {\n      if (item.type === 'video' || item.type === 'image' && (item.id.includes('_placeholder') || item.isVideoPlaceholder)) {\n        // either video or a placeholder for video files (both need to be included in the list)\n        if (!_this.videoRatingMap.has(item.id)) {\n          _this.videoRatingMap.set(item.id, item.idx);\n        }\n        _this.videoItems.push(item);\n      }\n    });\n  };\n  //--------------------------triggers--------------------------------//\n  VideoScrollHelper.prototype.handleEvent = function (_a) {\n    var eventName = _a.eventName,\n      eventData = _a.eventData;\n    switch (eventName) {\n      case VIDEO_EVENTS.SCROLL:\n        this.onScroll(eventData);\n        break;\n      case GALLERY_CONSTS.events.ITEM_ACTION_TRIGGERED:\n        //case VIDEO_EVENTS.clicked:\n        this.itemClicked(eventData.idx);\n        break;\n      case GALLERY_CONSTS.events.HOVER_SET:\n        //case VIDEO_EVENTS.hovered:\n        this.itemHovered(eventData);\n        break;\n      case GALLERY_CONSTS.events.VIDEO_ENDED:\n        //case VIDEO_EVENTS.ended:\n        this.videoEnded(eventData.idx);\n        break;\n      case GALLERY_CONSTS.events.VIDEO_PLAYED:\n        //case VIDEO_EVENTS.ended:\n        this.videoPlayed(eventData.idx);\n        break;\n      case GALLERY_CONSTS.events.VIDEO_ERROR:\n        //case VIDEO_EVENTS.ended:\n        this.videoErrorReported();\n        break;\n      case VIDEO_EVENTS.INIT_SCROLL:\n        break;\n      default:\n    }\n  };\n  VideoScrollHelper.prototype.itemHovered = function (idx) {\n    if (this.videoPlay !== 'hover') return;\n    if (this.IdxExistsInVideoItems(idx)) {\n      this.play(idx);\n    } else {\n      //do nothing\n    }\n  };\n  VideoScrollHelper.prototype.itemClicked = function (idx) {\n    if (this.videoPlay !== 'onClick') return;\n    // if (this.itemClick !== 'nothing') return;\n    if (this.IdxExistsInVideoItems(idx)) {\n      if (this.currentPlayingIdx === idx) {\n        this.stop();\n      } else {\n        this.play(idx);\n      }\n    } else {\n      //do nothing\n    }\n  };\n  VideoScrollHelper.prototype.onScroll = function (_a) {\n    var _this = this;\n    var top = _a.top,\n      left = _a.left;\n    this.top = top >= 0 ? top : this.top;\n    this.left = left >= 0 ? left : this.left;\n    if (this.currentPlayingIdx === -1) {\n      this.autoPlayNextVideoByRating({\n        top: this.top,\n        left: this.left\n      });\n    } else {\n      if (!this.isCurrentVideoStillVisible({\n        top: this.top,\n        left: this.left\n      })) {\n        this.stop(this.videoItems.findIndex(function (item) {\n          return item.idx === _this.currentPlayingIdx;\n        }));\n      }\n      this.autoPlayNextVideoByRating({\n        top: this.top,\n        left: this.left\n      });\n    }\n  };\n  VideoScrollHelper.prototype.videoEnded = function (idx) {\n    var indexInVideoItems = this.videoItems.findIndex(function (item) {\n      return item.idx === idx;\n    });\n    this.stop(indexInVideoItems);\n    var scroll = {\n      top: this.top,\n      left: this.left\n    };\n    this.autoPlayNextVideoByRating(scroll);\n  };\n  VideoScrollHelper.prototype.videoPlayed = function (idx) {\n    this.lastVideoPlayed = idx;\n  };\n  VideoScrollHelper.prototype.videoErrorReported = function () {\n    this.stop();\n  };\n  VideoScrollHelper.prototype.initializePlayState = function () {\n    this.autoPlayNextVideoByRating({\n      top: this.top,\n      left: this.left\n    });\n  };\n  //-------------------------------controls------------------------------------//\n  VideoScrollHelper.prototype.autoPlayNextVideoByRating = function (_a) {\n    var _this = this;\n    var top = _a.top,\n      left = _a.left;\n    if (!this.shouldAutoPlay()) {\n      return;\n    }\n    var secondBestRating = {\n      idx: -1,\n      rating: Infinity\n    };\n    var bestRating = {\n      idx: -1,\n      rating: Infinity\n    };\n    this.videoItems.some(function (item) {\n      if (_this.isVisible(item, {\n        top: top,\n        left: left\n      })) {\n        var itemRating = _this.videoRatingMap.get(item.id);\n        if (itemRating <= bestRating.rating) {\n          secondBestRating.idx = bestRating.idx;\n          secondBestRating.rating = bestRating.rating;\n          bestRating.idx = item.idx;\n          bestRating.rating = itemRating;\n        } else if (itemRating <= secondBestRating.rating) {\n          secondBestRating.idx = item.idx;\n          secondBestRating.rating = itemRating;\n        }\n        return false;\n      } else {\n        if (bestRating.idx >= 0) {\n          return true;\n        }\n        return false;\n      }\n    });\n    if (bestRating.idx >= 0) {\n      if (!this.allowedLoop() && bestRating.idx === this.lastVideoPlayed) {\n        if (secondBestRating.idx >= 0) {\n          this.play(secondBestRating.idx); //play 2nd in line instead. keep best rating for next by the score he got...\n        } else {\n          return; //cant play same video twice.\n        }\n      } else {\n        this.play(bestRating.idx);\n      }\n    } else {\n      this.lastVideoPlayed = -2; //if there are no videos to play. we can reset this mechanism so that one-video galleries can keep playing the same video\n    }\n  };\n\n  VideoScrollHelper.prototype.calculateCurrentItemPlacement = function () {\n    var _this = this;\n    return this.videoItems.findIndex(function (item) {\n      return item.idx === _this.currentPlayingIdx;\n    });\n  };\n  VideoScrollHelper.prototype.play = function (idx) {\n    this.setPlayingIdx(idx);\n    this.playing = true;\n  };\n  VideoScrollHelper.prototype.stop = function (indexInVideoItems) {\n    if (indexInVideoItems >= 0) {\n      var newRating = this.videoRatingMap.get(this.videoItems[indexInVideoItems].id) + this.currentItemCount;\n      this.videoRatingMap.set(this.videoItems[indexInVideoItems].id, newRating);\n    }\n    this.setPlayingIdx(-1);\n    this.playing = false;\n  };\n  VideoScrollHelper.prototype.onPlayingIdxChange = function () {\n    this.setPlayingVideos(this.currentPlayingIdx);\n  };\n  //-------------------------------get/set----------------------------------------//\n  VideoScrollHelper.prototype.setPlayingIdx = function (idx) {\n    if (this.currentPlayingIdx !== idx) {\n      this.currentPlayingIdx = idx;\n      this.onPlayingIdxChange();\n    }\n  };\n  //-----------------------------Utils--------------------------------------------//\n  VideoScrollHelper.prototype.isCurrentVideoStillVisible = function (_a) {\n    var top = _a.top,\n      left = _a.left;\n    var currentItemPlacement = this.calculateCurrentItemPlacement();\n    return this.isVisible(this.videoItems[currentItemPlacement], {\n      top: top,\n      left: left\n    });\n  };\n  VideoScrollHelper.prototype.isVisible = function (item, _a) {\n    var top = _a.top,\n      left = _a.left;\n    var target = {\n      offsetTop: this.scrollBase || 0,\n      scrollY: top,\n      scrollLeft: left\n    };\n    var videoPlayVerticalTolerance = (item.offset.top - item.offset.bottom) / 2;\n    var videoPlayHorizontalTolerance = (item.offset.left - item.offset.right) / 2;\n    var visibleVertically = isWithinPaddingVertically({\n      target: target,\n      scrollBase: this.scrollBase,\n      top: item.offset.top,\n      bottom: item.offset.top + item.style.height,\n      screenHeight: window && window.innerHeight,\n      padding: videoPlayVerticalTolerance\n    });\n    var visibleHorizontally;\n    if (!this.oneRow) {\n      visibleHorizontally = true;\n    } else {\n      visibleHorizontally = isWithinPaddingHorizontally({\n        target: target,\n        left: item.offset.left,\n        right: item.offset.left + item.style.width,\n        screenWidth: this.galleryWidth || window && window.innerWidth,\n        padding: videoPlayHorizontalTolerance\n      });\n    }\n    return visibleVertically && visibleHorizontally;\n  };\n  VideoScrollHelper.prototype.shouldAutoPlay = function () {\n    return this.videoPlay === 'auto';\n  };\n  VideoScrollHelper.prototype.allowedLoop = function () {\n    return this.videoLoop === true;\n  };\n  VideoScrollHelper.prototype.IdxExistsInVideoItems = function (idx) {\n    return this.videoItems.some(function (item) {\n      return item.idx === idx;\n    });\n  };\n  return VideoScrollHelper;\n}();\nexport default VideoScrollHelper;\n// this.renderedPaddingMultiply = 2;\n// this.visiblePaddingMultiply = 0;\n// this.videoPlayVerticalTolerance =\n//   (this.props.offset.bottom - this.props.offset.top) / 2;\n// this.videoPlayHorizontalTolerance =\n//   (this.props.offset.right - this.props.offset.left) / 2;\n// this.padding = {\n//   renderedVertical:\n//     utils.parseGetParam('renderedPadding') ||\n//     this.screenSize.height * this.renderedPaddingMultiply,\n//   visibleVertical:\n//     utils.parseGetParam('displayPadding') ||\n//     this.screenSize.height * this.visiblePaddingMultiply,\n//   playVertical:\n//     utils.parseGetParam('playPadding') ||\n//     this.screenSize.height * this.visiblePaddingMultiply -\n//       this.videoPlayVerticalTolerance,\n//   renderedHorizontal:\n//     utils.parseGetParam('renderedPadding') ||\n//     this.screenSize.width * this.renderedPaddingMultiply,\n//   visibleHorizontal:\n//     utils.parseGetParam('displayPadding') ||\n//     this.screenSize.width * this.visiblePaddingMultiply,\n//   playHorizontal:\n//     utils.parseGetParam('playPadding') ||\n//     this.screenSize.width * this.visiblePaddingMultiply -\n//       this.videoPlayHorizontalTolerance,\n// };"],"sourceRoot":""}