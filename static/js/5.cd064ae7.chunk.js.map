{"version":3,"sources":["../node_modules/@vimeo/player/dist/player.es.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js"],"names":["__webpack_require__","r","__webpack_exports__","global","setImmediate","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","isNode","toString","call","getMethodName","prop","type","indexOf","toLowerCase","concat","substr","toUpperCase","isVimeoUrl","url","test","getVimeoUrl","value","oEmbedParameters","arguments","undefined","id","idOrUrl","Error","isNaN","parseFloat","isFinite","Math","floor","replace","TypeError","arrayIndexOfSupport","Array","prototype","postMessageSupport","window","postMessage","commonjsGlobal","self","WeakMap","hasOwnProperty","object","name","this","rand","checkInstance","x","methodName","isObject","random","substring","entry","_id","module","npo_src","context","definition","builtInProp","cycle","scheduling_queue","ToString","timer","fn","setTimeout","obj","val","config","err","schedule","add","drain","isThenable","o","_then","o_type","then","notify","chain","notifyIsolated","state","success","failure","cb","ret","reject","msg","promise","resolve","triggered","def","iteratePromises","Constructor","arr","resolver","rejecter","idx","MakeDefWrapper","MakeDef","Promise","executor","__NPO__","constructor","push","def_wrapper","apply","first","last","item","Item","next","f","PromisePrototype","len","msgs","count","exports","callbackMap","storeCallback","player","callback","playerCallbacks","get","element","set","getCallbacks","removeCallback","index","splice","getOEmbedParameters","defaults","reduce","params","param","getAttribute","createEmbed","_ref","html","querySelector","div","document","createElement","innerHTML","appendChild","firstChild","setAttribute","getOEmbedData","videoUrl","encodeURIComponent","location","hostname","xhr","XDomainRequest","XMLHttpRequest","open","onload","status","json","JSON","parse","responseText","domain_status_code","error","onerror","send","parseMessageData","data","console","warn","method","contentWindow","message","ieVersion","navigator","userAgent","stringify","origin","processData","callbacks","event","forEach","shift","shiftCallbacks","e","playerMap","readyMap","Player","_this","options","instance","_classCallCheck","jQuery","getElementById","Boolean","nodeType","ownerDocument","defaultView","isDomElement","win","nodeName","iframe","has","readyPromise","onMessage","source","isReadyEvent","isPingResponse","addEventListener","attachEvent","_originalElement","oldElement","newElement","delete","swapCallbacks","catch","protoProps","staticProps","_this2","args","ready","_this3","_this4","eventName","callMethod","time","language","kind","_this5","removeAttribute","parentNode","removeChild","autopause","color","currentTime","loop","playbackRate","volume","parent","elements","slice","querySelectorAll","handleError","initializeEmbeds","VimeoPlayerResizeEmbeds_","iframes","parentElement","style","paddingBottom","bottom","resizeEmbeds","scope","Function","Timeout","clearFn","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","process","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","nextTick","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","onGlobalMessage","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","documentElement","script","onreadystatechange","installReadyStateChangeImplementation","task","run"],"mappings":"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","file":"static/js/5.cd064ae7.chunk.js","sourcesContent":["/*! @vimeo/player v2.8.2 | (c) 2019 Vimeo | MIT License | https://github.com/vimeo/player.js */\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n\n/* global global */\nvar isNode = typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\n\nfunction getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n  return \"\".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1));\n}\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\n\nfunction isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\n\nfunction isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\n\nfunction isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(url);\n}\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\n\nfunction getVimeoUrl() {\n  var oEmbedParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = oEmbedParameters.id;\n  var url = oEmbedParameters.url;\n  var idOrUrl = id || url;\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n  if (isInteger(idOrUrl)) {\n    return \"https://vimeo.com/\".concat(idOrUrl);\n  }\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n  if (id) {\n    throw new TypeError(\"\\u201C\".concat(id, \"\\u201D is not a valid video id.\"));\n  }\n  throw new TypeError(\"\\u201C\".concat(idOrUrl, \"\\u201D is not a vimeo.com url.\"));\n}\nvar arrayIndexOfSupport = typeof Array.prototype.indexOf !== 'undefined';\nvar postMessageSupport = typeof window !== 'undefined' && typeof window.postMessage !== 'undefined';\nif (!isNode && (!arrayIndexOfSupport || !postMessageSupport)) {\n  throw new Error('Sorry, the Vimeo Player API is not available in this browser.');\n}\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\n/*!\n * weakmap-polyfill v2.0.0 - ECMAScript6 WeakMap polyfill\n * https://github.com/polygonplanet/weakmap-polyfill\n * Copyright (c) 2015-2016 polygon planet <polygon.planet.aqua@gmail.com>\n * @license MIT\n */\n(function (self) {\n  if (self.WeakMap) {\n    return;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var defineProperty = function defineProperty(object, name, value) {\n    if (Object.defineProperty) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  self.WeakMap = function () {\n    // ECMA-262 23.3 WeakMap Objects\n    function WeakMap() {\n      if (this === void 0) {\n        throw new TypeError(\"Constructor WeakMap requires 'new'\");\n      }\n      defineProperty(this, '_id', genId('_WeakMap')); // ECMA-262 23.3.1.1 WeakMap([iterable])\n\n      if (arguments.length > 0) {\n        // Currently, WeakMap `iterable` argument is not supported\n        throw new TypeError('WeakMap iterable is not supported');\n      }\n    } // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)\n\n    defineProperty(WeakMap.prototype, 'delete', function (key) {\n      checkInstance(this, 'delete');\n      if (!isObject(key)) {\n        return false;\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        delete key[this._id];\n        return true;\n      }\n      return false;\n    }); // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)\n\n    defineProperty(WeakMap.prototype, 'get', function (key) {\n      checkInstance(this, 'get');\n      if (!isObject(key)) {\n        return void 0;\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        return entry[1];\n      }\n      return void 0;\n    }); // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)\n\n    defineProperty(WeakMap.prototype, 'has', function (key) {\n      checkInstance(this, 'has');\n      if (!isObject(key)) {\n        return false;\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        return true;\n      }\n      return false;\n    }); // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)\n\n    defineProperty(WeakMap.prototype, 'set', function (key, value) {\n      checkInstance(this, 'set');\n      if (!isObject(key)) {\n        throw new TypeError('Invalid value used as weak map key');\n      }\n      var entry = key[this._id];\n      if (entry && entry[0] === key) {\n        entry[1] = value;\n        return this;\n      }\n      defineProperty(key, this._id, [key, value]);\n      return this;\n    });\n    function checkInstance(x, methodName) {\n      if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {\n        throw new TypeError(methodName + ' method called on incompatible receiver ' + typeof x);\n      }\n    }\n    function genId(prefix) {\n      return prefix + '_' + rand() + '.' + rand();\n    }\n    function rand() {\n      return Math.random().toString().substring(2);\n    }\n    defineProperty(WeakMap, '_polyfill', true);\n    return WeakMap;\n  }();\n  function isObject(x) {\n    return Object(x) === x;\n  }\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal);\nvar npo_src = createCommonjsModule(function (module) {\n  /*! Native Promise Only\n      v0.8.1 (c) Kyle Simpson\n      MIT License: http://getify.mit-license.org\n  */\n  (function UMD(name, context, definition) {\n    // special form of UMD for polyfilling across evironments\n    context[name] = context[name] || definition();\n    if (module.exports) {\n      module.exports = context[name];\n    }\n  })(\"Promise\", typeof commonjsGlobal != \"undefined\" ? commonjsGlobal : commonjsGlobal, function DEF() {\n    var builtInProp,\n      cycle,\n      scheduling_queue,\n      ToString = Object.prototype.toString,\n      timer = typeof setImmediate != \"undefined\" ? function timer(fn) {\n        return setImmediate(fn);\n      } : setTimeout; // dammit, IE8.\n\n    try {\n      Object.defineProperty({}, \"x\", {});\n      builtInProp = function builtInProp(obj, name, val, config) {\n        return Object.defineProperty(obj, name, {\n          value: val,\n          writable: true,\n          configurable: config !== false\n        });\n      };\n    } catch (err) {\n      builtInProp = function builtInProp(obj, name, val) {\n        obj[name] = val;\n        return obj;\n      };\n    } // Note: using a queue instead of array for efficiency\n\n    scheduling_queue = function Queue() {\n      var first, last, item;\n      function Item(fn, self) {\n        this.fn = fn;\n        this.self = self;\n        this.next = void 0;\n      }\n      return {\n        add: function add(fn, self) {\n          item = new Item(fn, self);\n          if (last) {\n            last.next = item;\n          } else {\n            first = item;\n          }\n          last = item;\n          item = void 0;\n        },\n        drain: function drain() {\n          var f = first;\n          first = last = cycle = void 0;\n          while (f) {\n            f.fn.call(f.self);\n            f = f.next;\n          }\n        }\n      };\n    }();\n    function schedule(fn, self) {\n      scheduling_queue.add(fn, self);\n      if (!cycle) {\n        cycle = timer(scheduling_queue.drain);\n      }\n    } // promise duck typing\n\n    function isThenable(o) {\n      var _then,\n        o_type = typeof o;\n      if (o != null && (o_type == \"object\" || o_type == \"function\")) {\n        _then = o.then;\n      }\n      return typeof _then == \"function\" ? _then : false;\n    }\n    function notify() {\n      for (var i = 0; i < this.chain.length; i++) {\n        notifyIsolated(this, this.state === 1 ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n      }\n      this.chain.length = 0;\n    } // NOTE: This is a separate function to isolate\n    // the `try..catch` so that other code can be\n    // optimized better\n\n    function notifyIsolated(self, cb, chain) {\n      var ret, _then;\n      try {\n        if (cb === false) {\n          chain.reject(self.msg);\n        } else {\n          if (cb === true) {\n            ret = self.msg;\n          } else {\n            ret = cb.call(void 0, self.msg);\n          }\n          if (ret === chain.promise) {\n            chain.reject(TypeError(\"Promise-chain cycle\"));\n          } else if (_then = isThenable(ret)) {\n            _then.call(ret, chain.resolve, chain.reject);\n          } else {\n            chain.resolve(ret);\n          }\n        }\n      } catch (err) {\n        chain.reject(err);\n      }\n    }\n    function resolve(msg) {\n      var _then,\n        self = this; // already triggered?\n\n      if (self.triggered) {\n        return;\n      }\n      self.triggered = true; // unwrap\n\n      if (self.def) {\n        self = self.def;\n      }\n      try {\n        if (_then = isThenable(msg)) {\n          schedule(function () {\n            var def_wrapper = new MakeDefWrapper(self);\n            try {\n              _then.call(msg, function $resolve$() {\n                resolve.apply(def_wrapper, arguments);\n              }, function $reject$() {\n                reject.apply(def_wrapper, arguments);\n              });\n            } catch (err) {\n              reject.call(def_wrapper, err);\n            }\n          });\n        } else {\n          self.msg = msg;\n          self.state = 1;\n          if (self.chain.length > 0) {\n            schedule(notify, self);\n          }\n        }\n      } catch (err) {\n        reject.call(new MakeDefWrapper(self), err);\n      }\n    }\n    function reject(msg) {\n      var self = this; // already triggered?\n\n      if (self.triggered) {\n        return;\n      }\n      self.triggered = true; // unwrap\n\n      if (self.def) {\n        self = self.def;\n      }\n      self.msg = msg;\n      self.state = 2;\n      if (self.chain.length > 0) {\n        schedule(notify, self);\n      }\n    }\n    function iteratePromises(Constructor, arr, resolver, rejecter) {\n      for (var idx = 0; idx < arr.length; idx++) {\n        (function IIFE(idx) {\n          Constructor.resolve(arr[idx]).then(function $resolver$(msg) {\n            resolver(idx, msg);\n          }, rejecter);\n        })(idx);\n      }\n    }\n    function MakeDefWrapper(self) {\n      this.def = self;\n      this.triggered = false;\n    }\n    function MakeDef(self) {\n      this.promise = self;\n      this.state = 0;\n      this.triggered = false;\n      this.chain = [];\n      this.msg = void 0;\n    }\n    function Promise(executor) {\n      if (typeof executor != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n      if (this.__NPO__ !== 0) {\n        throw TypeError(\"Not a promise\");\n      } // instance shadowing the inherited \"brand\"\n      // to signal an already \"initialized\" promise\n\n      this.__NPO__ = 1;\n      var def = new MakeDef(this);\n      this[\"then\"] = function then(success, failure) {\n        var o = {\n          success: typeof success == \"function\" ? success : true,\n          failure: typeof failure == \"function\" ? failure : false\n        }; // Note: `then(..)` itself can be borrowed to be used against\n        // a different promise constructor for making the chained promise,\n        // by substituting a different `this` binding.\n\n        o.promise = new this.constructor(function extractChain(resolve, reject) {\n          if (typeof resolve != \"function\" || typeof reject != \"function\") {\n            throw TypeError(\"Not a function\");\n          }\n          o.resolve = resolve;\n          o.reject = reject;\n        });\n        def.chain.push(o);\n        if (def.state !== 0) {\n          schedule(notify, def);\n        }\n        return o.promise;\n      };\n      this[\"catch\"] = function $catch$(failure) {\n        return this.then(void 0, failure);\n      };\n      try {\n        executor.call(void 0, function publicResolve(msg) {\n          resolve.call(def, msg);\n        }, function publicReject(msg) {\n          reject.call(def, msg);\n        });\n      } catch (err) {\n        reject.call(def, err);\n      }\n    }\n    var PromisePrototype = builtInProp({}, \"constructor\", Promise, /*configurable=*/\n    false); // Note: Android 4 cannot use `Object.defineProperty(..)` here\n\n    Promise.prototype = PromisePrototype; // built-in \"brand\" to signal an \"uninitialized\" promise\n\n    builtInProp(PromisePrototype, \"__NPO__\", 0, /*configurable=*/\n    false);\n    builtInProp(Promise, \"resolve\", function Promise$resolve(msg) {\n      var Constructor = this; // spec mandated checks\n      // note: best \"isPromise\" check that's practical for now\n\n      if (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n        return msg;\n      }\n      return new Constructor(function executor(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n        resolve(msg);\n      });\n    });\n    builtInProp(Promise, \"reject\", function Promise$reject(msg) {\n      return new this(function executor(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n        reject(msg);\n      });\n    });\n    builtInProp(Promise, \"all\", function Promise$all(arr) {\n      var Constructor = this; // spec mandated checks\n\n      if (ToString.call(arr) != \"[object Array]\") {\n        return Constructor.reject(TypeError(\"Not an array\"));\n      }\n      if (arr.length === 0) {\n        return Constructor.resolve([]);\n      }\n      return new Constructor(function executor(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n        var len = arr.length,\n          msgs = Array(len),\n          count = 0;\n        iteratePromises(Constructor, arr, function resolver(idx, msg) {\n          msgs[idx] = msg;\n          if (++count === len) {\n            resolve(msgs);\n          }\n        }, reject);\n      });\n    });\n    builtInProp(Promise, \"race\", function Promise$race(arr) {\n      var Constructor = this; // spec mandated checks\n\n      if (ToString.call(arr) != \"[object Array]\") {\n        return Constructor.reject(TypeError(\"Not an array\"));\n      }\n      return new Constructor(function executor(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n        iteratePromises(Constructor, arr, function resolver(idx, msg) {\n          resolve(msg);\n        }, reject);\n      });\n    });\n    return Promise;\n  });\n});\n\n/**\n * @module lib/callbacks\n */\nvar callbackMap = new WeakMap();\n/**\n * Store a callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback\n *        The callback to call or an object with resolve and reject functions for a promise.\n * @return {void}\n */\n\nfunction storeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  if (!(name in playerCallbacks)) {\n    playerCallbacks[name] = [];\n  }\n  playerCallbacks[name].push(callback);\n  callbackMap.set(player.element, playerCallbacks);\n}\n/**\n * Get the callbacks for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @return {function[]}\n */\n\nfunction getCallbacks(player, name) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  return playerCallbacks[name] || [];\n}\n/**\n * Remove a stored callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @param {function} [callback] The specific callback to remove.\n * @return {boolean} Was this the last callback?\n */\n\nfunction removeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  if (!playerCallbacks[name]) {\n    return true;\n  } // If no callback is passed, remove all callbacks for the event\n\n  if (!callback) {\n    playerCallbacks[name] = [];\n    callbackMap.set(player.element, playerCallbacks);\n    return true;\n  }\n  var index = playerCallbacks[name].indexOf(callback);\n  if (index !== -1) {\n    playerCallbacks[name].splice(index, 1);\n  }\n  callbackMap.set(player.element, playerCallbacks);\n  return playerCallbacks[name] && playerCallbacks[name].length === 0;\n}\n/**\n * Return the first stored callback for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @return {function} The callback, or false if there were none\n */\n\nfunction shiftCallbacks(player, name) {\n  var playerCallbacks = getCallbacks(player, name);\n  if (playerCallbacks.length < 1) {\n    return false;\n  }\n  var callback = playerCallbacks.shift();\n  removeCallback(player, name, callback);\n  return callback;\n}\n/**\n * Move callbacks associated with an element to another element.\n *\n * @param {HTMLElement} oldElement The old element.\n * @param {HTMLElement} newElement The new element.\n * @return {void}\n */\n\nfunction swapCallbacks(oldElement, newElement) {\n  var playerCallbacks = callbackMap.get(oldElement);\n  callbackMap.set(newElement, playerCallbacks);\n  callbackMap.delete(oldElement);\n}\n\n/**\n * @module lib/embed\n */\nvar oEmbedParameters = ['autopause', 'autoplay', 'background', 'byline', 'color', 'dnt', 'height', 'id', 'loop', 'maxheight', 'maxwidth', 'muted', 'playsinline', 'portrait', 'responsive', 'speed', 'title', 'transparent', 'url', 'width'];\n/**\n * Get the 'data-vimeo'-prefixed attributes from an element as an object.\n *\n * @param {HTMLElement} element The element.\n * @param {Object} [defaults={}] The default values to use.\n * @return {Object<string, string>}\n */\n\nfunction getOEmbedParameters(element) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return oEmbedParameters.reduce(function (params, param) {\n    var value = element.getAttribute(\"data-vimeo-\".concat(param));\n    if (value || value === '') {\n      params[param] = value === '' ? 1 : value;\n    }\n    return params;\n  }, defaults);\n}\n/**\n * Create an embed from oEmbed data inside an element.\n *\n * @param {object} data The oEmbed data.\n * @param {HTMLElement} element The element to put the iframe in.\n * @return {HTMLIFrameElement} The iframe embed.\n */\n\nfunction createEmbed(_ref, element) {\n  var html = _ref.html;\n  if (!element) {\n    throw new TypeError('An element must be provided');\n  }\n  if (element.getAttribute('data-vimeo-initialized') !== null) {\n    return element.querySelector('iframe');\n  }\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  element.appendChild(div.firstChild);\n  element.setAttribute('data-vimeo-initialized', 'true');\n  return element.querySelector('iframe');\n}\n/**\n * Make an oEmbed call for the specified URL.\n *\n * @param {string} videoUrl The vimeo.com url for the video.\n * @param {Object} [params] Parameters to pass to oEmbed.\n * @param {HTMLElement} element The element.\n * @return {Promise}\n */\n\nfunction getOEmbedData(videoUrl) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    if (!isVimeoUrl(videoUrl)) {\n      throw new TypeError(\"\\u201C\".concat(videoUrl, \"\\u201D is not a vimeo.com url.\"));\n    }\n    var url = \"https://vimeo.com/api/oembed.json?url=\".concat(encodeURIComponent(videoUrl), \"&domain=\").concat(window.location.hostname);\n    for (var param in params) {\n      if (params.hasOwnProperty(param)) {\n        url += \"&\".concat(param, \"=\").concat(encodeURIComponent(params[param]));\n      }\n    }\n    var xhr = 'XDomainRequest' in window ? new XDomainRequest() : new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.onload = function () {\n      if (xhr.status === 404) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D was not found.\")));\n        return;\n      }\n      if (xhr.status === 403) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n        return;\n      }\n      try {\n        var json = JSON.parse(xhr.responseText); // Check api response for 403 on oembed\n\n        if (json.domain_status_code === 403) {\n          // We still want to create the embed to give users visual feedback\n          createEmbed(json, element);\n          reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n          return;\n        }\n        resolve(json);\n      } catch (error) {\n        reject(error);\n      }\n    };\n    xhr.onerror = function () {\n      var status = xhr.status ? \" (\".concat(xhr.status, \")\") : '';\n      reject(new Error(\"There was an error fetching the embed code from Vimeo\".concat(status, \".\")));\n    };\n    xhr.send();\n  });\n}\n/**\n * Initialize all embeds within a specific element\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction initializeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var elements = [].slice.call(parent.querySelectorAll('[data-vimeo-id], [data-vimeo-url]'));\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error creating an embed: \".concat(error));\n    }\n  };\n  elements.forEach(function (element) {\n    try {\n      // Skip any that have data-vimeo-defer\n      if (element.getAttribute('data-vimeo-defer') !== null) {\n        return;\n      }\n      var params = getOEmbedParameters(element);\n      var url = getVimeoUrl(params);\n      getOEmbedData(url, params, element).then(function (data) {\n        return createEmbed(data, element);\n      }).catch(handleError);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n}\n/**\n * Resize embeds when messaged by the player.\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction resizeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  // Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoPlayerResizeEmbeds_) {\n    return;\n  }\n  window.VimeoPlayerResizeEmbeds_ = true;\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    } // 'spacechange' is fired only on embeds with cards\n\n    if (!event.data || event.data.event !== 'spacechange') {\n      return;\n    }\n    var iframes = parent.querySelectorAll('iframe');\n    for (var i = 0; i < iframes.length; i++) {\n      if (iframes[i].contentWindow !== event.source) {\n        continue;\n      } // Change padding-bottom of the enclosing div to accommodate\n      // card carousel without distorting aspect ratio\n\n      var space = iframes[i].parentElement;\n      space.style.paddingBottom = \"\".concat(event.data.data[0].bottom, \"px\");\n      break;\n    }\n  };\n  if (window.addEventListener) {\n    window.addEventListener('message', onMessage, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('onmessage', onMessage);\n  }\n}\n\n/**\n * @module lib/postmessage\n */\n/**\n * Parse a message received from postMessage.\n *\n * @param {*} data The data received from postMessage.\n * @return {object}\n */\n\nfunction parseMessageData(data) {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      // If the message cannot be parsed, throw the error as a warning\n      console.warn(error);\n      return {};\n    }\n  }\n  return data;\n}\n/**\n * Post a message to the specified target.\n *\n * @param {Player} player The player object to use.\n * @param {string} method The API method to call.\n * @param {object} params The parameters to send to the player.\n * @return {void}\n */\n\nfunction postMessage(player, method, params) {\n  if (!player.element.contentWindow || !player.element.contentWindow.postMessage) {\n    return;\n  }\n  var message = {\n    method: method\n  };\n  if (params !== undefined) {\n    message.value = params;\n  } // IE 8 and 9 do not support passing messages, so stringify them\n\n  var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/, '$1'));\n  if (ieVersion >= 8 && ieVersion < 10) {\n    message = JSON.stringify(message);\n  }\n  player.element.contentWindow.postMessage(message, player.origin);\n}\n/**\n * Parse the data received from a message event.\n *\n * @param {Player} player The player that received the message.\n * @param {(Object|string)} data The message data. Strings will be parsed into JSON.\n * @return {void}\n */\n\nfunction processData(player, data) {\n  data = parseMessageData(data);\n  var callbacks = [];\n  var param;\n  if (data.event) {\n    if (data.event === 'error') {\n      var promises = getCallbacks(player, data.data.method);\n      promises.forEach(function (promise) {\n        var error = new Error(data.data.message);\n        error.name = data.data.name;\n        promise.reject(error);\n        removeCallback(player, data.data.method, promise);\n      });\n    }\n    callbacks = getCallbacks(player, \"event:\".concat(data.event));\n    param = data.data;\n  } else if (data.method) {\n    var callback = shiftCallbacks(player, data.method);\n    if (callback) {\n      callbacks.push(callback);\n      param = data.value;\n    }\n  }\n  callbacks.forEach(function (callback) {\n    try {\n      if (typeof callback === 'function') {\n        callback.call(player, param);\n        return;\n      }\n      callback.resolve(param);\n    } catch (e) {// empty\n    }\n  });\n}\nvar playerMap = new WeakMap();\nvar readyMap = new WeakMap();\nvar Player = /*#__PURE__*/\nfunction () {\n  /**\n   * Create a Player.\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo\n   *        player iframe, and id, or a jQuery object.\n   * @param {object} [options] oEmbed parameters to use when creating an embed in the element.\n   * @return {Player}\n   */\n  function Player(element) {\n    var _this = this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Player);\n\n    /* global jQuery */\n    if (window.jQuery && element instanceof jQuery) {\n      if (element.length > 1 && window.console && console.warn) {\n        console.warn('A jQuery object with multiple elements was passed, using the first element.');\n      }\n      element = element[0];\n    } // Find an element by ID\n\n    if (typeof document !== 'undefined' && typeof element === 'string') {\n      element = document.getElementById(element);\n    } // Not an element!\n\n    if (!isDomElement(element)) {\n      throw new TypeError('You must pass either a valid element or a valid id.');\n    }\n    var win = element.ownerDocument.defaultView; // Already initialized an embed in this div, so grab the iframe\n\n    if (element.nodeName !== 'IFRAME') {\n      var iframe = element.querySelector('iframe');\n      if (iframe) {\n        element = iframe;\n      }\n    } // iframe url is not a Vimeo url\n\n    if (element.nodeName === 'IFRAME' && !isVimeoUrl(element.getAttribute('src') || '')) {\n      throw new Error('The player element passed isn’t a Vimeo embed.');\n    } // If there is already a player object in the map, return that\n\n    if (playerMap.has(element)) {\n      return playerMap.get(element);\n    }\n    this.element = element;\n    this.origin = '*';\n    var readyPromise = new npo_src(function (resolve, reject) {\n      var onMessage = function onMessage(event) {\n        if (!isVimeoUrl(event.origin) || _this.element.contentWindow !== event.source) {\n          return;\n        }\n        if (_this.origin === '*') {\n          _this.origin = event.origin;\n        }\n        var data = parseMessageData(event.data);\n        var isError = data && data.event === 'error';\n        var isReadyError = isError && data.data && data.data.method === 'ready';\n        if (isReadyError) {\n          var error = new Error(data.data.message);\n          error.name = data.data.name;\n          reject(error);\n          return;\n        }\n        var isReadyEvent = data && data.event === 'ready';\n        var isPingResponse = data && data.method === 'ping';\n        if (isReadyEvent || isPingResponse) {\n          _this.element.setAttribute('data-ready', 'true');\n          resolve();\n          return;\n        }\n        processData(_this, data);\n      };\n      if (win.addEventListener) {\n        win.addEventListener('message', onMessage, false);\n      } else if (win.attachEvent) {\n        win.attachEvent('onmessage', onMessage);\n      }\n      if (_this.element.nodeName !== 'IFRAME') {\n        var params = getOEmbedParameters(element, options);\n        var url = getVimeoUrl(params);\n        getOEmbedData(url, params, element).then(function (data) {\n          var iframe = createEmbed(data, element); // Overwrite element with the new iframe,\n          // but store reference to the original element\n\n          _this.element = iframe;\n          _this._originalElement = element;\n          swapCallbacks(element, iframe);\n          playerMap.set(_this.element, _this);\n          return data;\n        }).catch(reject);\n      }\n    }); // Store a copy of this Player in the map\n\n    readyMap.set(this, readyPromise);\n    playerMap.set(this.element, this); // Send a ping to the iframe so the ready promise will be resolved if\n    // the player is already ready.\n\n    if (this.element.nodeName === 'IFRAME') {\n      postMessage(this, 'ping');\n    }\n    return this;\n  }\n  /**\n   * Get a promise for a method.\n   *\n   * @param {string} name The API method to call.\n   * @param {Object} [args={}] Arguments to send via postMessage.\n   * @return {Promise}\n   */\n\n  _createClass(Player, [{\n    key: \"callMethod\",\n    value: function callMethod(name) {\n      var _this2 = this;\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new npo_src(function (resolve, reject) {\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n        return _this2.ready().then(function () {\n          storeCallback(_this2, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this2, name, args);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for the value of a player property.\n     *\n     * @param {string} name The property name\n     * @return {Promise}\n     */\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this3 = this;\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'get'); // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n        return _this3.ready().then(function () {\n          storeCallback(_this3, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this3, name);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for setting the value of a player property.\n     *\n     * @param {string} name The API method to call.\n     * @param {mixed} value The value to set.\n     * @return {Promise}\n     */\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'set');\n        if (value === undefined || value === null) {\n          throw new TypeError('There must be a value to set.');\n        } // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n        return _this4.ready().then(function () {\n          storeCallback(_this4, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this4, name, value);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Add an event listener for the specified event. Will call the\n     * callback with a single parameter, `data`, that contains the data for\n     * that event.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function(*)} callback The function to call when the event fires.\n     * @return {void}\n     */\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n      if (!callback) {\n        throw new TypeError('You must pass a callback function.');\n      }\n      if (typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n      var callbacks = getCallbacks(this, \"event:\".concat(eventName));\n      if (callbacks.length === 0) {\n        this.callMethod('addEventListener', eventName).catch(function () {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n      storeCallback(this, \"event:\".concat(eventName), callback);\n    }\n    /**\n     * Remove an event listener for the specified event. Will remove all\n     * listeners for that event if a `callback` isn’t passed, or only that\n     * specific callback if it is passed.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function} [callback] The specific callback to remove.\n     * @return {void}\n     */\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n      if (callback && typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n      var lastCallback = removeCallback(this, \"event:\".concat(eventName), callback); // If there are no callbacks left, remove the listener\n\n      if (lastCallback) {\n        this.callMethod('removeEventListener', eventName).catch(function (e) {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n    }\n    /**\n     * A promise to load a new video.\n     *\n     * @promise LoadVideoPromise\n     * @fulfill {number} The video with this id successfully loaded.\n     * @reject {TypeError} The id was not a number.\n     */\n\n    /**\n     * Load a new video into this embed. The promise will be resolved if\n     * the video is successfully loaded, or it will be rejected if it could\n     * not be loaded.\n     *\n     * @param {number|object} options The id of the video or an object with embed options.\n     * @return {LoadVideoPromise}\n     */\n  }, {\n    key: \"loadVideo\",\n    value: function loadVideo(options) {\n      return this.callMethod('loadVideo', options);\n    }\n    /**\n     * A promise to perform an action when the Player is ready.\n     *\n     * @todo document errors\n     * @promise LoadVideoPromise\n     * @fulfill {void}\n     */\n\n    /**\n     * Trigger a function when the player iframe has initialized. You do not\n     * need to wait for `ready` to trigger to begin adding event listeners\n     * or calling other methods.\n     *\n     * @return {ReadyPromise}\n     */\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var readyPromise = readyMap.get(this) || new npo_src(function (resolve, reject) {\n        reject(new Error('Unknown player. Probably unloaded.'));\n      });\n      return npo_src.resolve(readyPromise);\n    }\n    /**\n     * A promise to add a cue point to the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point to use for removeCuePoint.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Add a cue point to the player.\n     *\n     * @param {number} time The time for the cue point.\n     * @param {object} [data] Arbitrary data to be returned with the cue point.\n     * @return {AddCuePointPromise}\n     */\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(time) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.callMethod('addCuePoint', {\n        time: time,\n        data: data\n      });\n    }\n    /**\n     * A promise to remove a cue point from the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point that was removed.\n     * @reject {InvalidCuePoint} The cue point with the specified id was not\n     *         found.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Remove a cue point from the video.\n     *\n     * @param {string} id The id of the cue point to remove.\n     * @return {RemoveCuePointPromise}\n     */\n  }, {\n    key: \"removeCuePoint\",\n    value: function removeCuePoint(id) {\n      return this.callMethod('removeCuePoint', id);\n    }\n    /**\n     * A representation of a text track on a video.\n     *\n     * @typedef {Object} VimeoTextTrack\n     * @property {string} language The ISO language code.\n     * @property {string} kind The kind of track it is (captions or subtitles).\n     * @property {string} label The human‐readable label for the track.\n     */\n\n    /**\n     * A promise to enable a text track.\n     *\n     * @promise EnableTextTrackPromise\n     * @fulfill {VimeoTextTrack} The text track that was enabled.\n     * @reject {InvalidTrackLanguageError} No track was available with the\n     *         specified language.\n     * @reject {InvalidTrackError} No track was available with the specified\n     *         language and kind.\n     */\n\n    /**\n     * Enable the text track with the specified language, and optionally the\n     * specified kind (captions or subtitles).\n     *\n     * When set via the API, the track language will not change the viewer’s\n     * stored preference.\n     *\n     * @param {string} language The two‐letter language code.\n     * @param {string} [kind] The kind of track to enable (captions or subtitles).\n     * @return {EnableTextTrackPromise}\n     */\n  }, {\n    key: \"enableTextTrack\",\n    value: function enableTextTrack(language, kind) {\n      if (!language) {\n        throw new TypeError('You must pass a language.');\n      }\n      return this.callMethod('enableTextTrack', {\n        language: language,\n        kind: kind\n      });\n    }\n    /**\n     * A promise to disable the active text track.\n     *\n     * @promise DisableTextTrackPromise\n     * @fulfill {void} The track was disabled.\n     */\n\n    /**\n     * Disable the currently-active text track.\n     *\n     * @return {DisableTextTrackPromise}\n     */\n  }, {\n    key: \"disableTextTrack\",\n    value: function disableTextTrack() {\n      return this.callMethod('disableTextTrack');\n    }\n    /**\n     * A promise to pause the video.\n     *\n     * @promise PausePromise\n     * @fulfill {void} The video was paused.\n     */\n\n    /**\n     * Pause the video if it’s playing.\n     *\n     * @return {PausePromise}\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this.callMethod('pause');\n    }\n    /**\n     * A promise to play the video.\n     *\n     * @promise PlayPromise\n     * @fulfill {void} The video was played.\n     */\n\n    /**\n     * Play the video if it’s paused. **Note:** on iOS and some other\n     * mobile devices, you cannot programmatically trigger play. Once the\n     * viewer has tapped on the play button in the player, however, you\n     * will be able to use this function.\n     *\n     * @return {PlayPromise}\n     */\n  }, {\n    key: \"play\",\n    value: function play() {\n      return this.callMethod('play');\n    }\n    /**\n     * A promise to unload the video.\n     *\n     * @promise UnloadPromise\n     * @fulfill {void} The video was unloaded.\n     */\n\n    /**\n     * Return the player to its initial state.\n     *\n     * @return {UnloadPromise}\n     */\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      return this.callMethod('unload');\n    }\n    /**\n     * Cleanup the player and remove it from the DOM\n     *\n     * It won't be usable and a new one should be constructed\n     *  in order to do any operations.\n     *\n     * @return {Promise}\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n      return new npo_src(function (resolve) {\n        readyMap.delete(_this5);\n        playerMap.delete(_this5.element);\n        if (_this5._originalElement) {\n          playerMap.delete(_this5._originalElement);\n          _this5._originalElement.removeAttribute('data-vimeo-initialized');\n        }\n        if (_this5.element && _this5.element.nodeName === 'IFRAME' && _this5.element.parentNode) {\n          _this5.element.parentNode.removeChild(_this5.element);\n        }\n        resolve();\n      });\n    }\n    /**\n     * A promise to get the autopause behavior of the video.\n     *\n     * @promise GetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get the autopause behavior for this player.\n     *\n     * @return {GetAutopausePromise}\n     */\n  }, {\n    key: \"getAutopause\",\n    value: function getAutopause() {\n      return this.get('autopause');\n    }\n    /**\n     * A promise to set the autopause behavior of the video.\n     *\n     * @promise SetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Enable or disable the autopause behavior of this player.\n     *\n     * By default, when another video is played in the same browser, this\n     * player will automatically pause. Unless you have a specific reason\n     * for doing so, we recommend that you leave autopause set to the\n     * default (`true`).\n     *\n     * @param {boolean} autopause\n     * @return {SetAutopausePromise}\n     */\n  }, {\n    key: \"setAutopause\",\n    value: function setAutopause(autopause) {\n      return this.set('autopause', autopause);\n    }\n    /**\n     * A promise to get the buffered property of the video.\n     *\n     * @promise GetBufferedPromise\n     * @fulfill {Array} Buffered Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the buffered property of the video.\n     *\n     * @return {GetBufferedPromise}\n     */\n  }, {\n    key: \"getBuffered\",\n    value: function getBuffered() {\n      return this.get('buffered');\n    }\n    /**\n     * A promise to get the color of the player.\n     *\n     * @promise GetColorPromise\n     * @fulfill {string} The hex color of the player.\n     */\n\n    /**\n     * Get the color for this player.\n     *\n     * @return {GetColorPromise}\n     */\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      return this.get('color');\n    }\n    /**\n     * A promise to set the color of the player.\n     *\n     * @promise SetColorPromise\n     * @fulfill {string} The color was successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n\n    /**\n     * Set the color of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     *\n     * @param {string} color The hex or rgb color string to set.\n     * @return {SetColorPromise}\n     */\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      return this.set('color', color);\n    }\n    /**\n     * A representation of a cue point.\n     *\n     * @typedef {Object} VimeoCuePoint\n     * @property {number} time The time of the cue point.\n     * @property {object} data The data passed when adding the cue point.\n     * @property {string} id The unique id for use with removeCuePoint.\n     */\n\n    /**\n     * A promise to get the cue points of a video.\n     *\n     * @promise GetCuePointsPromise\n     * @fulfill {VimeoCuePoint[]} The cue points added to the video.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get an array of the cue points added to the video.\n     *\n     * @return {GetCuePointsPromise}\n     */\n  }, {\n    key: \"getCuePoints\",\n    value: function getCuePoints() {\n      return this.get('cuePoints');\n    }\n    /**\n     * A promise to get the current time of the video.\n     *\n     * @promise GetCurrentTimePromise\n     * @fulfill {number} The current time in seconds.\n     */\n\n    /**\n     * Get the current playback position in seconds.\n     *\n     * @return {GetCurrentTimePromise}\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.get('currentTime');\n    }\n    /**\n     * A promise to set the current time of the video.\n     *\n     * @promise SetCurrentTimePromise\n     * @fulfill {number} The actual current time that was set.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     */\n\n    /**\n     * Set the current playback position in seconds. If the player was\n     * paused, it will remain paused. Likewise, if the player was playing,\n     * it will resume playing once the video has buffered.\n     *\n     * You can provide an accurate time and the player will attempt to seek\n     * to as close to that time as possible. The exact time will be the\n     * fulfilled value of the promise.\n     *\n     * @param {number} currentTime\n     * @return {SetCurrentTimePromise}\n     */\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime) {\n      return this.set('currentTime', currentTime);\n    }\n    /**\n     * A promise to get the duration of the video.\n     *\n     * @promise GetDurationPromise\n     * @fulfill {number} The duration in seconds.\n     */\n\n    /**\n     * Get the duration of the video in seconds. It will be rounded to the\n     * nearest second before playback begins, and to the nearest thousandth\n     * of a second after playback begins.\n     *\n     * @return {GetDurationPromise}\n     */\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.get('duration');\n    }\n    /**\n     * A promise to get the ended state of the video.\n     *\n     * @promise GetEndedPromise\n     * @fulfill {boolean} Whether or not the video has ended.\n     */\n\n    /**\n     * Get the ended state of the video. The video has ended if\n     * `currentTime === duration`.\n     *\n     * @return {GetEndedPromise}\n     */\n  }, {\n    key: \"getEnded\",\n    value: function getEnded() {\n      return this.get('ended');\n    }\n    /**\n     * A promise to get the loop state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the player is set to loop.\n     */\n\n    /**\n     * Get the loop state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      return this.get('loop');\n    }\n    /**\n     * A promise to set the loop state of the player.\n     *\n     * @promise SetLoopPromise\n     * @fulfill {boolean} The loop state that was set.\n     */\n\n    /**\n     * Set the loop state of the player. When set to `true`, the player\n     * will start over immediately once playback ends.\n     *\n     * @param {boolean} loop\n     * @return {SetLoopPromise}\n     */\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      return this.set('loop', loop);\n    }\n    /**\n     * A promise to get the paused state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the video is paused.\n     */\n\n    /**\n     * Get the paused state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n  }, {\n    key: \"getPaused\",\n    value: function getPaused() {\n      return this.get('paused');\n    }\n    /**\n     * A promise to get the playback rate of the player.\n     *\n     * @promise GetPlaybackRatePromise\n     * @fulfill {number} The playback rate of the player on a scale from 0.5 to 2.\n     */\n\n    /**\n     * Get the playback rate of the player on a scale from `0.5` to `2`.\n     *\n     * @return {GetPlaybackRatePromise}\n     */\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.get('playbackRate');\n    }\n    /**\n     * A promise to set the playbackrate of the player.\n     *\n     * @promise SetPlaybackRatePromise\n     * @fulfill {number} The playback rate was set.\n     * @reject {RangeError} The playback rate was less than 0.5 or greater than 2.\n     */\n\n    /**\n     * Set the playback rate of the player on a scale from `0.5` to `2`. When set\n     * via the API, the playback rate will not be synchronized to other\n     * players or stored as the viewer's preference.\n     *\n     * @param {number} playbackRate\n     * @return {SetPlaybackRatePromise}\n     */\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(playbackRate) {\n      return this.set('playbackRate', playbackRate);\n    }\n    /**\n     * A promise to get the played property of the video.\n     *\n     * @promise GetPlayedPromise\n     * @fulfill {Array} Played Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the played property of the video.\n     *\n     * @return {GetPlayedPromise}\n     */\n  }, {\n    key: \"getPlayed\",\n    value: function getPlayed() {\n      return this.get('played');\n    }\n    /**\n     * A promise to get the seekable property of the video.\n     *\n     * @promise GetSeekablePromise\n     * @fulfill {Array} Seekable Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the seekable property of the video.\n     *\n     * @return {GetSeekablePromise}\n     */\n  }, {\n    key: \"getSeekable\",\n    value: function getSeekable() {\n      return this.get('seekable');\n    }\n    /**\n     * A promise to get the seeking property of the player.\n     *\n     * @promise GetSeekingPromise\n     * @fulfill {boolean} Whether or not the player is currently seeking.\n     */\n\n    /**\n     * Get if the player is currently seeking.\n     *\n     * @return {GetSeekingPromise}\n     */\n  }, {\n    key: \"getSeeking\",\n    value: function getSeeking() {\n      return this.get('seeking');\n    }\n    /**\n     * A promise to get the text tracks of a video.\n     *\n     * @promise GetTextTracksPromise\n     * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.\n     */\n\n    /**\n     * Get an array of the text tracks that exist for the video.\n     *\n     * @return {GetTextTracksPromise}\n     */\n  }, {\n    key: \"getTextTracks\",\n    value: function getTextTracks() {\n      return this.get('textTracks');\n    }\n    /**\n     * A promise to get the embed code for the video.\n     *\n     * @promise GetVideoEmbedCodePromise\n     * @fulfill {string} The `<iframe>` embed code for the video.\n     */\n\n    /**\n     * Get the `<iframe>` embed code for the video.\n     *\n     * @return {GetVideoEmbedCodePromise}\n     */\n  }, {\n    key: \"getVideoEmbedCode\",\n    value: function getVideoEmbedCode() {\n      return this.get('videoEmbedCode');\n    }\n    /**\n     * A promise to get the id of the video.\n     *\n     * @promise GetVideoIdPromise\n     * @fulfill {number} The id of the video.\n     */\n\n    /**\n     * Get the id of the video.\n     *\n     * @return {GetVideoIdPromise}\n     */\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return this.get('videoId');\n    }\n    /**\n     * A promise to get the title of the video.\n     *\n     * @promise GetVideoTitlePromise\n     * @fulfill {number} The title of the video.\n     */\n\n    /**\n     * Get the title of the video.\n     *\n     * @return {GetVideoTitlePromise}\n     */\n  }, {\n    key: \"getVideoTitle\",\n    value: function getVideoTitle() {\n      return this.get('videoTitle');\n    }\n    /**\n     * A promise to get the native width of the video.\n     *\n     * @promise GetVideoWidthPromise\n     * @fulfill {number} The native width of the video.\n     */\n\n    /**\n     * Get the native width of the currently‐playing video. The width of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoWidthPromise}\n     */\n  }, {\n    key: \"getVideoWidth\",\n    value: function getVideoWidth() {\n      return this.get('videoWidth');\n    }\n    /**\n     * A promise to get the native height of the video.\n     *\n     * @promise GetVideoHeightPromise\n     * @fulfill {number} The native height of the video.\n     */\n\n    /**\n     * Get the native height of the currently‐playing video. The height of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoHeightPromise}\n     */\n  }, {\n    key: \"getVideoHeight\",\n    value: function getVideoHeight() {\n      return this.get('videoHeight');\n    }\n    /**\n     * A promise to get the vimeo.com url for the video.\n     *\n     * @promise GetVideoUrlPromise\n     * @fulfill {number} The vimeo.com url for the video.\n     * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.\n     */\n\n    /**\n     * Get the vimeo.com url for the video.\n     *\n     * @return {GetVideoUrlPromise}\n     */\n  }, {\n    key: \"getVideoUrl\",\n    value: function getVideoUrl() {\n      return this.get('videoUrl');\n    }\n    /**\n     * A promise to get the volume level of the player.\n     *\n     * @promise GetVolumePromise\n     * @fulfill {number} The volume level of the player on a scale from 0 to 1.\n     */\n\n    /**\n     * Get the current volume level of the player on a scale from `0` to `1`.\n     *\n     * Most mobile devices do not support an independent volume from the\n     * system volume. In those cases, this method will always return `1`.\n     *\n     * @return {GetVolumePromise}\n     */\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.get('volume');\n    }\n    /**\n     * A promise to set the volume level of the player.\n     *\n     * @promise SetVolumePromise\n     * @fulfill {number} The volume was set.\n     * @reject {RangeError} The volume was less than 0 or greater than 1.\n     */\n\n    /**\n     * Set the volume of the player on a scale from `0` to `1`. When set\n     * via the API, the volume level will not be synchronized to other\n     * players or stored as the viewer’s preference.\n     *\n     * Most mobile devices do not support setting the volume. An error will\n     * *not* be triggered in that situation.\n     *\n     * @param {number} volume\n     * @return {SetVolumePromise}\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      return this.set('volume', volume);\n    }\n  }]);\n  return Player;\n}(); // Setup embed only if this is not a node environment\n\nif (!isNode) {\n  initializeEmbeds();\n  resizeEmbeds();\n}\nexport default Player;","var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;","(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n  var nextHandle = 1; // Spec says greater than zero\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    }\n    // Copy function arguments\n    var args = new Array(arguments.length - 1);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    }\n    // Store and register the task\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n      case 1:\n        callback(args[0]);\n        break;\n      case 2:\n        callback(args[0], args[1]);\n        break;\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n      if (task) {\n        currentlyRunningATask = true;\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n      html.appendChild(script);\n    };\n  }\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  }\n\n  // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n  // Don't get fooled by e.g. browserify environments.\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);"],"sourceRoot":""}